apply plugin: 'com.android.application'

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

repositories {
    mavenCentral()
    flatDir {
        dirs '../librarys/aars', 'aars'
    }
}

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.2"
    defaultConfig {
        applicationId "com.merchantplatform"
        minSdkVersion 15
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true //支持多dex
    }

    signingConfigs {
        key {
            storeFile file("../merchantplatform.jks")
            storePassword "123456"
            keyAlias "merchantplatform"
            keyPassword "123456"
        }
    }


    buildTypes {
        release {
            signingConfig signingConfigs.key  // 配置release包的签名
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "isRelease", "true"
        }
        debug {
            signingConfig signingConfigs.key  // 配置debug包的签名
            buildConfigField "boolean", "isRelease", "false"
        }
    }
    lintOptions {
        abortOnError false
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            def outputPathName = "../jenkinspackage/"
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                if (variant.buildType.name.equals('release')) {
                    output.outputFile = new File(outputPathName,
                            "shangjiatong_release_v${defaultConfig.versionName}_${releaseTime()}.apk".toLowerCase())
                } else if (variant.buildType.name.equals('debug')) {
                    output.outputFile = new File(outputFile.parent,
                            "shangjiatong_debug_v${defaultConfig.versionName}_${releaseTime()}.apk".toLowerCase())
                }
            }
        }
    }

//    productFlavors {
//        yingyongbao {
////            manifestPlaceholders = [CHANNEL_VALUE: "yingyongbao"]
//        }
//
//        tsz {
////            manifestPlaceholders = [CHANNEL_VALUE: "360"]
//        }
//
//        baidu {
////            manifestPlaceholders = [CHANNEL_VALUE: "baidu"]
//        }
//
//        yingyongbao_local {
////            manifestPlaceholders = [CHANNEL_VALUE: "yingyongbao_local"]
//        }
//
//        fir {
////            manifestPlaceholders = [CHANNEL_VALUE: "fir"]
//        }
//    }

    configurations.all {
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:support-v4:24.2.1'
    compile 'com.android.support:appcompat-v7:24.2.1'
    testCompile 'junit:junit:4.12'
    compile project(path: ':librarys')

    compile 'com.google.code.gson:gson:2.5'
    releaseCompile 'com.wuba.wuxian.sdk:login:2.3.9-NOLEGO'
    debugCompile 'com.wuba.wuxian.sdk:login:2.3.9-NOLEGO-debug-SNAPSHOT-2'
    compile 'com.tencent.bugly:crashreport:2.3.6'
    compile(name: 'WChatLib-release', ext: 'aar')
    compile(name: 'WChatWrap-release', ext: 'aar')
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.github.bumptech.glide:glide:3.7.0'
//    compile 'com.squareup.okhttp3:okhttp:3.2.0'
//    compile 'com.squareup.okio:okio:1.11.0'
//    compile 'com.alibaba:fastjson:1.1.55.android'
}
