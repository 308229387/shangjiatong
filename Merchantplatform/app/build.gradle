apply plugin: 'com.android.application'

def outputPath = "../jenkinspackage/"

def releaseTime() {
    return new Date().format("yyyy_MM_dd", TimeZone.getTimeZone("UTC"))
}

repositories {
    mavenCentral()
    flatDir {
        dirs '../librarys/libs'
    }
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"
    defaultConfig {
        applicationId "com.merchantplatform"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true //支持多dex
    }

    signingConfigs {
        key {
            storeFile file("../merchantplatform.jks")
            storePassword "123456"
            keyAlias "merchantplatform"
            keyPassword "123456"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.key  // 配置release包的签名
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.key  // 配置debug包的签名
        }
    }
    lintOptions {
        abortOnError false
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            def outputName = "shangjiatong_${variant.buildType.name}_v${defaultConfig.versionName}_${releaseTime()}_${variant.productFlavors[0].name}.apk".toLowerCase()
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                if (variant.buildType.name.equals('release')) {
                    output.outputFile = new File(outputPath, outputName)
                } else if (variant.buildType.name.equals('debug')) {
                    output.outputFile = new File(outputFile.parent, outputName)
                }
            }
        }
    }

    productFlavors {
        yingyongbao {
            manifestPlaceholders = [CHANNEL_VALUE: "yingyongbao"]
        }
        tsz {
            manifestPlaceholders = [CHANNEL_VALUE: "360"]
        }
        baidu {
            manifestPlaceholders = [CHANNEL_VALUE: "baidu"]
        }
        yingyongbao_local {
            manifestPlaceholders = [CHANNEL_VALUE: "yingyongbao_local"]
        }
        fir {
            manifestPlaceholders = [CHANNEL_VALUE: "fir"]
        }
    }

    configurations.all {
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }

    splits {
        abi {
            enable true
            reset()
            universalApk false
            include "armeabi"//im64位兼容问题
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile project(path: ':librarys')
    compile 'com.google.code.gson:gson:2.5'
    compile(name: 'wbpush-release_1.2.0_build_3082', ext: 'aar')
    compile 'com.android.support:support-v4:23.4.0'
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile 'com.tencent.bugly:crashreport:2.3.6'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    testCompile 'junit:junit:4.12'
    debugCompile 'com.wuba.wuxian.sdk:login:2.3.9-NOLEGO-debug-SNAPSHOT-2'
    releaseCompile 'com.wuba.wuxian.sdk:login:2.3.9-NOLEGO'
    compile 'com.wuba.wchat:WChatLib-release:1.2.1.48'
    compile project(':WChatUIKit')
}
